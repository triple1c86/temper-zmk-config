/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#define BASE 0
#define NAV 1
#define NUM 2
#define FUN 3
#define MED 4
#define MOU 5
#define MIR 6
&caps_word { continue-list = <UNDERSCORE MINUS BACKSPACE N0 N1 N2 N3 N4 N5 N6 N7 N8 N9>; };
/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
    combos {
        compatible = "zmk,combos";
        timeout-ms = <40>;
        left-del {
            bindings = <&kp DEL>;
            key-positions = <20 21>;
        };
        right-del {
            bindings = <&kp DEL>;
            key-positions = <28 29>;
        };
        esc-left {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };
        esc-right {
            bindings = <&kp ESC>;
            key-positions = <8 9>;
        };
        Rbracket-left {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <0 2>;
            layers = <2>;
        };
        Rbracket-right {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <7 9>;
            layers = <2>;
        };
        Bslash-left {
            bindings = <&kp BACKSLASH>;
            key-positions = <20 22>;
        };
        Bslash-right {
            bindings = <&kp BACKSLASH>;
            key-positions = <27 29>;
        };
        Lnav-left {
            bindings = <&to 1>;
            key-positions = <31 23 22>;
        };
        Lnav-right {
            bindings = <&to 1>;
            key-positions = <34 26 27>;
        };
        Lnum-left {
            bindings = <&to 2>;
            key-positions = <30 23 22>;
        };
        Lnum-right {
            bindings = <&to 2>;
            key-positions = <26 35 27>;
        };
        Lfun-left {
            bindings = <&to 3>;
            key-positions = <23 24 22>;
        };
        Lfun-right {
            bindings = <&to 3>;
            key-positions = <25 26 27>;
        };
        Lmou-left {
            bindings = <&to 5>;
            key-positions = <23 14 22>;
        };
        Lmou-right {
            bindings = <&to 5>;
            key-positions = <15 26 27>;
        };
        Lmed-left {
            bindings = <&to 4>;
            key-positions = <4 23 22>;
        };
        Lmed-right {
            bindings = <&to 4>;
            key-positions = <5 26 27>;
        };
        Todef-left {
            bindings = <&to 0>;
            key-positions = <0 32>;
        };
        Todef-right {
            bindings = <&to 0>;
            key-positions = <9 33>;
        };
        left-bksp {
            bindings = <&kp BSPC>;
            key-positions = <10 11>;
        };
        right-bksp {
            bindings = <&kp BSPC>;
            key-positions = <18 19>;
        };
    };
    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
&kp Q       &kp W       &kp F        &kp P        &lt 4 B      &lt 4 J      &kp L        &kp U            &kp Y         &kp SEMI
&hm RGUI A  &hm RALT R  &hm RCTRL S  &hm RSHFT T  &lt 5 G      &lt 5 M      &hm LSHFT N  &hm LCTRL E      &hm LALT I    &hm LGUI O
&hm LGUI Z  &hm LALT X  &hm LCTRL C  &hm LSHFT D  &lt 3 V      &lt 3 K      &hm RSHFT H  &hm RCTRL COMMA  &hm RALT DOT  &hm RGUI FSLH
                        &lt 2 TAB    &lt 1 SPACE  &lt 6 ENTER  &lt 6 ENTER  &lt 1 BSPC   &lt 2 DEL
            >;
        };
        nav_layer {
            bindings = <
&kp HOME  &kp PAGE_UP     &kp UP_ARROW    &kp PAGE_DOWN  &kp END     &kp END    &kp PAGE_DOWN  &kp UP_ARROW    &kp PAGE_UP  &kp HOME
&kp RGUI  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT      &caps_word  &kp CAPS   &kp RIGHT      &kp DOWN_ARROW  &kp LEFT     &kp LGUI
&kp LGUI  &kp LALT        &kp LCTRL       &kp LSHFT      &kp INS     &kp INS    &kp RSHFT      &kp RCTRL       &kp RALT     &kp RGUI
                          &kp TAB         &kp SPACE      &kp ENTER   &kp ENTER  &kp SPACE      &kp TAB
            >;
        };
        num_layer {
            bindings = <
&kp LEFT_BRACKET  &kp N7             &kp N8              &kp N9              &kp NUMBER_0  &kp N0     &kp N9              &kp N8              &kp N7             &kp RIGHT_BRACKET
&hm RGUI SQT      &hm RALT NUMBER_4  &hm RCTRL N5        &hm RSHFT NUMBER_6  &kp EQUAL     &kp EQUAL  &hm LSHFT NUMBER_6  &hm LCTRL N5        &hm LALT NUMBER_4  &hm LGUI SQT
&hm LGUI GRAVE    &hm LALT NUMBER_1  &hm LCTRL NUMBER_2  &hm LSHFT NUMBER_3  &kp MINUS     &kp MINUS  &hm RSHFT NUMBER_3  &hm RCTRL NUMBER_2  &hm RALT NUMBER_1  &hm RGUI GRAVE
                                     &kp TAB             &kp SPACE           &kp ENTER     &kp ENTER  &kp SPACE           &kp TAB
            >;
        };
        fun_layer {
            bindings = <
&kp F12       &kp F7       &kp F8        &kp F9        &kp PSCRN        &kp PRINTSCREEN  &kp F9             &kp F8        &kp F7       &kp F12
&hm RGUI F11  &hm RALT F4  &hm RCTRL F5  &hm RSHFT F6  &kp SCROLLLOCK   &kp SCROLLLOCK   &mt LEFT_SHIFT F6  &hm LCTRL F5  &hm LALT F4  &hm LGUI F11
&hm LGUI F10  &hm LALT F1  &hm LCTRL F2  &hm LSHFT F3  &kp PAUSE_BREAK  &kp PAUSE_BREAK  &hm RSHFT F3       &hm RCTRL F2  &hm RALT F1  &hm RGUI F10
                           &kp TAB       &kp SPACE     &kp ENTER        &kp ENTER        &kp SPACE          &kp TAB
            >;
        };
        med_layer {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4       &bt BT_SEL 4       &bt BT_SEL 3     &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0
&kp C_PREV    &kp C_STOP    &kp C_PLAY    &kp C_NEXT       &bt BT_CLR         &bt BT_CLR         &kp C_NEXT       &kp C_PLAY    &kp C_STOP    &kp C_PREV
&out OUT_TOG  &bt BT_PRV    &bt BT_NXT    &none            &sys_reset         &sys_reset         &none            &bt BT_NXT    &bt BT_PRV    &out OUT_TOG
                            &kp C_MUTE    &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_MUTE
            >;
        };
        mou_layer {
            bindings = <
&none     &kp C_AC_SCROLL_UP  &none      &kp C_AC_SCROLL_DOWN  &none      &none      &kp C_AC_SCROLL_DOWN  &none      &kp C_AC_SCROLL_UP  &none
&kp BSPC  &none               &none      &none                 &none      &none      &none                 &none      &none               &kp BSPC
&kp LGUI  &kp LALT            &kp LCTRL  &kp LSHFT             &none      &none      &kp RSHFT             &kp RCTRL  &kp RALT            &kp RGUI
                              &mkp MCLK  &mkp RCLK             &mkp LCLK  &mkp LCLK  &mkp RCLK             &mkp MCLK
            >;
        };
        mir_layer {
            bindings = <
&kp SEMI       &kp Y         &kp U            &kp L        &lt 4 J      &lt 4 B      &kp P        &kp F        &kp W       &kp Q
&hm LGUI O     &hm LALT I    &hm LCTRL E      &hm LSHFT N  &lt 5 M      &lt 5 G      &hm RSHFT T  &hm RCTRL S  &hm RALT R  &hm RGUI A
&hm RGUI FSLH  &hm RALT DOT  &hm RCTRL COMMA  &hm RSHFT H  &lt 3 K      &lt 3 V      &hm LSHFT D  &hm LCTRL C  &hm LALT X  &hm LGUI Z
                             &lt 2 DEL        &lt 1 BSPC   &lt 6 ENTER  &lt 6 ENTER  &lt 1 SPACE  &lt 2 TAB
            >;
        };
    };
};
